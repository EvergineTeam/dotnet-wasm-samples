<Project Sdk="Microsoft.NET.Sdk.BlazorWebAssembly">

  <PropertyGroup>
    <TargetFramework>net6.0</TargetFramework>
  </PropertyGroup>

  <PropertyGroup>
    <PublishTrimmed>false</PublishTrimmed>
    <UsingBrowserRuntimeWorkload>true</UsingBrowserRuntimeWorkload>
    <!-- <WasmBuildNative>true</WasmBuildNative> -->
    <!-- <RunAOTCompilation>true</RunAOTCompilation> -->
    <!-- <WasmGenerateAppBundle>true</WasmGenerateAppBundle> -->
    <WasmMainJSPath>wwwroot/main.js</WasmMainJSPath>
  </PropertyGroup>

  <ItemGroup>
    <WasmFilesToIncludeInFileSystem Include="wwwroot/assets/file.txt"/>
  </ItemGroup>

  <ItemGroup>
    <Assets Include="wwwroot/assets/**/*" />
  </ItemGroup>

  <!-- <ItemGroup>
    <Content Include="@(Assets)" />
  </ItemGroup> -->

  <ItemGroup>
    <FrameworkReference Update="Microsoft.NETCore.App" RuntimeFrameworkVersion="6.0.0-rc.1.21401.1" />
    <PackageReference Include="Microsoft.AspNetCore.Components.WebAssembly" Version="6.0.0-rc.1.21381.3" />
    <!-- <PackageReference Include="Microsoft.AspNetCore.Components.WebAssembly.DevServer" Version="6.0.0-rc.1.21381.3" PrivateAssets="all" /> -->
  </ItemGroup>

  <!-- <PropertyGroup>
    <DataTarget>$(OutDir)wwwroot/content.dat</DataTarget>
    <Preload>$(OutDir)wwwroot/file.txt</Preload>
    <JsOutput>$(OutDir)wwwroot/content.js</JsOutput>
    <NoHeapCopy>true</NoHeapCopy>
  </PropertyGroup> -->

  <PropertyGroup>
    <TasksDir>..\filesystem.tasks\</TasksDir>
    <PreloadContentTaskAsmDir Condition=" '$(MSBuildRuntimeType)' == 'Core' ">$(TasksDir)bin\Debug\net6.0\</PreloadContentTaskAsmDir>
    <PreloadContentTaskAsmDir Condition=" '$(MSBuildRuntimeType)' != 'Core' ">$(TasksDir)bin\Debug\net472\</PreloadContentTaskAsmDir>
  </PropertyGroup>

  <UsingTask TaskName="PreloadContentTask" AssemblyFile = "$(PreloadContentTaskAsmDir)Wasm.FileSystem.Tasks.dll"/>

  <Target Name="PreloadContent" BeforeTargets="ResolveRuntimePackAssets">
    <PreloadContentTask Assets="@(Assets)" OutDir="$(IntermediateOutputPath)" MainJS="$(TasksDir)assets.js">
      <Output TaskParameter="GeneratedContentFile" ItemName="_GeneratedContentFile" />
    </PreloadContentTask>

    <ItemGroup>
      <FileWrites Include="$(_GeneratedContentFile)" />
      <_BuildAssetsJson
        Include="@(_GeneratedContentFile)"
        RelativePath="assets.js" />
    </ItemGroup>

    <DefineStaticWebAssets
      CandidateAssets="@(_BuildAssetsJson)"
      SourceId="$(PackageId)"
      SourceType="Computed"
      AssetKind="Build"
      AssetRole="Primary"
      AssetTraitName="BlazorWebAssemblyResource"
      AssetTraitValue="manifest"
      CopyToOutputDirectory="PreserveNewest"
      CopyToPublishDirectory="PreserveNewest"
      ContentRoot="$(OutDir)wwwroot"
      BasePath="$(StaticWebAssetBasePath)"
      >
      <Output TaskParameter="Assets" ItemName="_ResolveCustomAssets" />
    </DefineStaticWebAssets>

    <ItemGroup>
      <StaticWebAsset Include="@(_ResolveCustomAssets)" />
    </ItemGroup>

    <DefineStaticWebAssets
      CandidateAssets="@(_BuildAssetsJson)"
      SourceId="$(PackageId)"
      SourceType="Computed"
      AssetKind="Publish"
      AssetRole="Primary"
      AssetTraitName="BlazorWebAssemblyResource"
      AssetTraitValue="manifest"
      CopyToOutputDirectory="PreserveNewest"
      CopyToPublishDirectory="PreserveNewest"
      ContentRoot="$(PublishDir)wwwroot"
      BasePath="$(StaticWebAssetBasePath)"
      >
      <Output TaskParameter="Assets" ItemName="_ResolvePublishCustomAssets" />
    </DefineStaticWebAssets>

    <ItemGroup>
      <StaticWebAsset Include="@(_ResolvePublishCustomAssets)" />
    </ItemGroup>
  </Target>

  <!-- <Target Name="CustomAppBundle" AfterTargets="_WasmGenerateAppBundle" BeforeTargets="_AfterWasmBuildApp">
    <Error Condition="'$(WasmMainJSPath)' == ''" Text="%24(WasmMainJSPath) property needs to be set" />

    <PropertyGroup>
      <WasmIcuDataFileName Condition="'$(InvariantGlobalization)' != 'true'">icudt.dat</WasmIcuDataFileName>

      <_HasDotnetWasm Condition="'%(WasmNativeAsset.FileName)%(WasmNativeAsset.Extension)' == 'dotnet.wasm'">true</_HasDotnetWasm>
      <_HasDotnetJs Condition="'%(WasmNativeAsset.FileName)%(WasmNativeAsset.Extension)' == 'dotnet.js'">true</_HasDotnetJs>
    </PropertyGroup>

    <ItemGroup>
      <WasmNativeAsset Include="$(MicrosoftNetCoreAppRuntimePackRidNativeDir)dotnet.wasm" Condition="'$(_HasDotnetWasm)' != 'true'" />
      <WasmNativeAsset Include="$(MicrosoftNetCoreAppRuntimePackRidNativeDir)dotnet.js" Condition="'$(_HasDotnetJs)' != 'true'" />

      <WasmNativeAsset Include="$(MicrosoftNetCoreAppRuntimePackRidNativeDir)$(WasmIcuDataFileName)" Condition="'$(InvariantGlobalization)' != 'true'" />
      <WasmNativeAsset Include="$(MicrosoftNetCoreAppRuntimePackRidNativeDir)dotnet.timezones.blat" />
    </ItemGroup>

    <WasmAppBuilder
      AppDir="$(WasmAppDir)"
      MainJS="$(WasmMainJSPath)"
      Assemblies="@(_WasmAssembliesInternal)"
      InvariantGlobalization="$(InvariantGlobalization)"
      SatelliteAssemblies="@(_WasmSatelliteAssemblies)"
      FilesToIncludeInFileSystem="@(WasmFilesToIncludeInFileSystem)"
      IcuDataFileName="$(WasmIcuDataFileName)"
      RemoteSources="@(WasmRemoteSources)"
      ExtraFilesToDeploy="@(WasmExtraFilesToDeploy)"
      ExtraConfig="@(WasmExtraConfig)"
      NativeAssets="@(WasmNativeAsset)"
      DebugLevel="$(WasmDebugLevel)">
      <Output TaskParameter="FileWrites" ItemName="FileWrites" />
    </WasmAppBuilder>

    <CallTarget Targets="_GenerateRunV8Script" Condition="'$(WasmGenerateRunV8Script)' == 'true'" />
  </Target> -->

</Project>